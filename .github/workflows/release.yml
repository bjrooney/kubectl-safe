name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
    - uses: actions/checkout@v5
    - name: Set up Go
      uses: actions/setup-go@v6
      with:
        go-version: '1.25'
    - name: Extract version from tag
      run: |
        TAG=${GITHUB_REF#refs/tags/v}
        echo "VERSION=$TAG" >> $GITHUB_ENV
        echo "Building version: $TAG"
        echo "$TAG" > VERSION
    - name: Run tests
      run: make test
    - name: Build for multiple platforms
      run: |
        VERSION=$(cat VERSION)
        LDFLAGS="-X github.com/bjrooney/kubectl-safe/pkg/safe.Version=$VERSION"
        mkdir -p bin
        # Linux AMD64
        GOOS=linux GOARCH=amd64 go build -ldflags "$LDFLAGS" -o bin/kubectl-safe-linux-amd64 ./cmd/kubectl-safe
        tar -czf kubectl-safe-linux-amd64.tar.gz -C bin kubectl-safe-linux-amd64
        # Linux ARM64
        GOOS=linux GOARCH=arm64 go build -ldflags "$LDFLAGS" -o bin/kubectl-safe-linux-arm64 ./cmd/kubectl-safe
        tar -czf kubectl-safe-linux-arm64.tar.gz -C bin kubectl-safe-linux-arm64
        # Darwin AMD64
        GOOS=darwin GOARCH=amd64 go build -ldflags "$LDFLAGS" -o bin/kubectl-safe-darwin-amd64 ./cmd/kubectl-safe
        tar -czf kubectl-safe-darwin-amd64.tar.gz -C bin kubectl-safe-darwin-amd64
        # Darwin ARM64
        GOOS=darwin GOARCH=arm64 go build -ldflags "$LDFLAGS" -o bin/kubectl-safe-darwin-arm64 ./cmd/kubectl-safe
        tar -czf kubectl-safe-darwin-arm64.tar.gz -C bin kubectl-safe-darwin-arm64
        # Windows AMD64
        GOOS=windows GOARCH=amd64 go build -ldflags "$LDFLAGS" -o bin/kubectl-safe-windows-amd64.exe ./cmd/kubectl-safe
        tar -czf kubectl-safe-windows-amd64.tar.gz -C bin kubectl-safe-windows-amd64.exe
    - name: Update safe.yaml with version
      run: |
        VERSION=$(cat VERSION)
        sed -i "s/version: v.*/version: v$VERSION/" safe.yaml
        sed -i "s|download/v.*/kubectl-safe|download/v$VERSION/kubectl-safe|g" safe.yaml
    - name: Generate checksums
      run: |
        sha256sum *.tar.gz > checksums.txt
        echo "Generated checksums:"
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: |
          kubectl-safe-linux-amd64.tar.gz
          kubectl-safe-linux-arm64.tar.gz
          kubectl-safe-darwin-amd64.tar.gz
          kubectl-safe-darwin-arm64.tar.gz
          kubectl-safe-windows-amd64.tar.gz
          safe.yaml
        generate_release_notes: true
        body: |
          ## kubectl-safe v${{ env.VERSION }}
          ### Changes
          - Version bumped to v${{ env.VERSION }}
          ### Installation
          #### Krew (recommended)
          ```bash
          kubectl krew install safe
          ```
          #### Manual Installation
          Download the appropriate binary for your platform from the assets below and place it in your PATH.
          ### Usage
          ```bash
          kubectl safe --version
          kubectl safe delete pod mypod --context=prod --namespace=default
          ```
          ### Checksums
          See the attached safe.yaml file for SHA256 checksums of all binaries.
          checksums.txt
    - name: Trigger Krew Index Update
      uses: peter-evans/repository-dispatch@v3
      with:
        token: ${{ secrets.KREW_INDEX_TOKEN }}
        repository: bjrooney/kubectl-safe
        event-type: krew-publish
        client-payload: '{"version": "${{ github.ref_name }}"}'
 
